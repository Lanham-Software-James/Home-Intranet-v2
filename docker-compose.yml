services:
  db:
    image: mongo:latest
    container_name: home-intranet-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_NAME}
    networks:
      - home-intranet-backend
    command:
      - '--logpath'
      - '/var/log/mongodb/mongod.log'
    ports:
      - 27017:27017
    volumes:
      - home-intranet-db-data:/data/db
      # - ./docker/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    restart: unless-stopped

  backend:
    build:
      context: ./Backend
      target: dev
    container_name: home-intranet-backend
    environment:

      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_NAME: $DB_NAME}

      BACKEND_SECRET: ${SECRET}
      BACKEND_HOST: ${BACKEND_HOST}
      BACKEND_ALLOWED_HOSTS: ${BACKEND_ALLOWED_HOSTS}

    depends_on:
      - db
    networks:
      - home-intranet-backend
      - home-intranet-frontend
    ports:
      - "3000:3000"
      - "2345:2345"
    volumes:
      - "./Backend:/app"
    restart: unless-stopped

  frontend:
    build:
      context: ./Frontend
      target: dev
    container_name: home-intranet-frontend
    environment:
      API_URL: ${API_URL}
    depends_on:
      - backend
    networks:
      - home-intranet-frontend
    ports:
      - "5173:5173"
    volumes:
      - "./Frontend/src:/app/src"
      - "./Frontend/tests:/app/tests"
      - "./Frontend/static:/app/static"
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./SSL:/etc/letsencrypt
    depends_on:
      - frontend
      - backend
    networks:
      - home-intranet-frontend
      - home-intranet-backend
    restart: unless-stopped

networks:
  home-intranet-backend:
    driver: bridge
  home-intranet-frontend:
    driver: bridge

volumes:
  home-intranet-db-data:
